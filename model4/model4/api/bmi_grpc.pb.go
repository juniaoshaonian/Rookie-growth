// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.1
// source: api/bmi.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BMIServiceClient is the client API for BMIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BMIServiceClient interface {
	BMIInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*BMIInfoReply, error)
}

type bMIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBMIServiceClient(cc grpc.ClientConnInterface) BMIServiceClient {
	return &bMIServiceClient{cc}
}

func (c *bMIServiceClient) BMIInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*BMIInfoReply, error) {
	out := new(BMIInfoReply)
	err := c.cc.Invoke(ctx, "/model4.BMIService/BMIInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BMIServiceServer is the server API for BMIService service.
// All implementations must embed UnimplementedBMIServiceServer
// for forward compatibility
type BMIServiceServer interface {
	BMIInfo(context.Context, *UserInfoRequest) (*BMIInfoReply, error)
	mustEmbedUnimplementedBMIServiceServer()
}

// UnimplementedBMIServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBMIServiceServer struct {
}

func (UnimplementedBMIServiceServer) BMIInfo(context.Context, *UserInfoRequest) (*BMIInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BMIInfo not implemented")
}
func (UnimplementedBMIServiceServer) mustEmbedUnimplementedBMIServiceServer() {}

// UnsafeBMIServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BMIServiceServer will
// result in compilation errors.
type UnsafeBMIServiceServer interface {
	mustEmbedUnimplementedBMIServiceServer()
}

func RegisterBMIServiceServer(s grpc.ServiceRegistrar, srv BMIServiceServer) {
	s.RegisterService(&BMIService_ServiceDesc, srv)
}

func _BMIService_BMIInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BMIServiceServer).BMIInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model4.BMIService/BMIInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BMIServiceServer).BMIInfo(ctx, req.(*UserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BMIService_ServiceDesc is the grpc.ServiceDesc for BMIService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BMIService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "model4.BMIService",
	HandlerType: (*BMIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BMIInfo",
			Handler:    _BMIService_BMIInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/bmi.proto",
}
